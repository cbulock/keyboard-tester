{"version":3,"sources":["context/Config.js","components/GlobalStyle.jsx","context/ActiveKeys.js","components/Key/Icon.jsx","components/Key/Key.jsx","consts.js","components/Key/index.js","components/KeyByCode/index.js","components/KeyByCode/KeyByCode.jsx","components/Spacer/Spacer.jsx","components/Spacer/index.js","components/KeyboardRow/KeyboardRow.jsx","components/KeyboardRow/index.js","components/Keyboard/Keyboard.jsx","components/Keyboard/index.js","pages/Index.jsx","App.jsx","index.jsx"],"names":["createContext","GlobalStyle","createGlobalStyle","theme","text","Icon","name","className","SKey","styled","div","$active","darkest","position","handleXPosition","$position","handleYPosition","$size","$rowHeight","$hasBeenActive","dark","props","light","lighten","lightest","determineBackgroundColor","SPrimary","SLabel","span","size","determineLabelFontSize","SSecondaryLabel","SIcon","Key","label","labelSize","secondaryLabel","startIcon","endIcon","active","rowHeight","useState","hasBeenActive","setHasBeenActive","useEffect","KeyByCode","code","style","useContext","ConfigContext","activeKeys","ActiveKeysContext","keyDefs","includes","SSpacer","KEYSIZE","Spacer","SRow","KeyboardRow","keys","map","key","index","type","SBoard","Keyboard","row","SPageWrapper","SLink","a","Index","setActiveKeys","ActiveKeys","Provider","value","onKeyDown","event","preventDefault","repeat","onKeyUp","filter","tabIndex","href","App","ReactDOM","render","StrictMode","Config","config","document","getElementById"],"mappings":"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","file":"static/js/main.975e5dd4.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport default createContext();\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n    body {\n        margin: 0;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n        'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        color: ${({ theme }) => theme.text};\n    }\n  \n    code {\n        font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n    }\n`;\n\nexport default GlobalStyle;\n","import { createContext } from 'react';\n\nexport default createContext();\n","/* eslint-disable import/no-extraneous-dependencies */\nimport PropTypes from 'prop-types';\nimport { Shift as ShiftIcon } from '@styled-icons/icomoon';\nimport { ArrowReturnLeft as EnterIcon } from '@styled-icons/bootstrap';\n\nconst Icon = ({ name = null, className }) => {\n\tswitch (name) {\n\t\tcase 'enter':\n\t\t\treturn <EnterIcon className={className} />;\n\t\tcase 'shift':\n\t\t\treturn <ShiftIcon className={className} />;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n\nIcon.propTypes = {\n\tname: PropTypes.string,\n\tclassName: PropTypes.string,\n};\n\nexport default Icon;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { lighten } from 'polished';\nimport Icon from 'components/Key/Icon';\nimport { KEYSIZE } from 'consts';\n\nconst handleXPosition = (position) => {\n\tswitch (position) {\n\t\tcase 'top-left':\n\t\tcase 'bottom-left':\n\t\t\treturn 'flex-start';\n\t\tcase 'top-right':\n\t\tcase 'bottom-right':\n\t\t\treturn 'flex-end';\n\t\tdefault:\n\t\t\treturn 'center';\n\t}\n};\n\nconst handleYPosition = (position) => {\n\tswitch (position) {\n\t\tcase 'top-left':\n\t\tcase 'top-right':\n\t\t\treturn 'flex-start';\n\t\tcase 'bottom-left':\n\t\tcase 'bottom-right':\n\t\t\treturn 'flex-end';\n\t\tdefault:\n\t\t\treturn 'center';\n\t}\n};\n\nconst determineBackgroundColor = ({ theme, $active, $hasBeenActive }) => {\n\tif ($active) return theme.light;\n\tif ($hasBeenActive) return lighten(0.15, theme.lightest);\n\treturn theme.text;\n};\n\nconst determineLabelFontSize = (size) => {\n\tswitch (size) {\n\t\tcase 'small':\n\t\t\treturn '0.875rem';\n\t\tcase 'normal':\n\t\t\treturn '1rem';\n\t\tdefault:\n\t\t\treturn '1.25rem';\n\t}\n};\n\nconst SKey = styled.div`\n\tcolor: ${({ theme, $active }) => ($active ? theme.text : theme.darkest)};\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: ${({ $position }) => handleXPosition($position)};\n\tjustify-content: ${({ $position }) => handleYPosition($position)};\n\tmargin: 4px;\n\twidth: ${({ $size }) => $size * KEYSIZE - 10}px;\n\theight: ${({ $rowHeight }) => $rowHeight * KEYSIZE - 10}px;\n\tborder: 1px solid\n\t\t${({ theme, $hasBeenActive }) =>\n\t\t\t$hasBeenActive ? theme.dark : theme.darkest};\n\tborder-radius: 4px;\n\tbackground-color: ${(props) => determineBackgroundColor(props)};\n`;\n\nconst SPrimary = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n`;\n\nconst SLabel = styled.span`\n\tpadding: 4px;\n\tfont-weight: 700;\n\tfont-size: ${({ $size }) => determineLabelFontSize($size)};\n`;\n\nconst SSecondaryLabel = styled.span`\n\tpadding: 6px;\n\tfont-size: 0.875rem;\n`;\n\nconst SIcon = styled(Icon)`\n\twidth: 20px;\n\tpadding: 0 4px;\n`;\n\nconst Key = ({\n\tlabel = '',\n\tlabelSize = 'normal',\n\tsecondaryLabel = null,\n\tstartIcon = null,\n\tendIcon = null,\n\tsize = 1,\n\tposition = 'center',\n\tactive = false,\n\trowHeight = 1,\n}) => {\n\tconst [hasBeenActive, setHasBeenActive] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (active) setHasBeenActive(true);\n\t}, [active]);\n\n\treturn (\n\t\t<SKey\n\t\t\t$size={size}\n\t\t\t$rowHeight={rowHeight}\n\t\t\t$position={position}\n\t\t\t$active={active}\n\t\t\t$hasBeenActive={hasBeenActive}\n\t\t>\n\t\t\t{!!secondaryLabel && <SSecondaryLabel>{secondaryLabel}</SSecondaryLabel>}\n\t\t\t<SPrimary>\n\t\t\t\t{startIcon && <SIcon name={startIcon} />}\n\t\t\t\t<SLabel $size={labelSize}>{label}</SLabel>\n\t\t\t\t{endIcon && <SIcon name={endIcon} />}\n\t\t\t</SPrimary>\n\t\t</SKey>\n\t);\n};\n\nconst validIconNames = [null, 'enter', 'shift'];\n\nKey.propTypes = {\n\tlabel: PropTypes.string,\n\tlabelSize: PropTypes.oneOf(['small', 'normal', 'large']),\n\tsecondaryLabel: PropTypes.string,\n\tsize: PropTypes.number,\n\tposition: PropTypes.oneOf([\n\t\t'top-left',\n\t\t'bottom-left',\n\t\t'top-right',\n\t\t'bottom-right',\n\t\t'center',\n\t]),\n\tstartIcon: PropTypes.oneOf(validIconNames),\n\tendIcon: PropTypes.oneOf(validIconNames),\n\tactive: PropTypes.bool,\n\trowHeight: PropTypes.number,\n};\n\nexport default Key;\n","const KEYSIZE = 17 * 3 + 10;\n\n// eslint-disable-next-line import/prefer-default-export\nexport { KEYSIZE };\n","import Key from './Key';\n\nexport default Key;\n","import KeyByCode from './KeyByCode';\n\nexport default KeyByCode;\n","import { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport ConfigContext from 'context/Config';\nimport ActiveKeysContext from 'context/ActiveKeys';\nimport Key from 'components/Key';\nimport keyDefs from './keyDefs.json';\n\nconst KeyByCode = ({ code, rowHeight = 1, size = 1 }) => {\n\tconst { style } = useContext(ConfigContext);\n\tconst activeKeys = useContext(ActiveKeysContext);\n\n\treturn (\n\t\t<Key\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t{...keyDefs[code]}\n\t\t\trowHeight={rowHeight}\n\t\t\tsize={size}\n\t\t\tposition={style.position}\n\t\t\tactive={activeKeys.includes(code)}\n\t\t/>\n\t);\n};\n\nKeyByCode.propTypes = {\n\tcode: PropTypes.string.isRequired,\n\trowHeight: PropTypes.number,\n\tsize: PropTypes.number,\n};\n\nexport default KeyByCode;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { KEYSIZE } from 'consts';\n\nconst SSpacer = styled.div`\n\tmargin: 4px;\n\twidth: ${({ size }) => size * KEYSIZE - 10}px;\n\theight: ${KEYSIZE - 10}px;\n\tborder: 1px solid rgba(0, 0, 0, 0);\n`;\n\nconst Spacer = ({ size = 1 }) => <SSpacer size={size} />;\n\nSpacer.propTypes = {\n\tsize: PropTypes.number,\n};\n\nexport default Spacer;\n","import Spacer from './Spacer';\n\nexport default Spacer;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport KeyByCode from 'components/KeyByCode';\nimport Spacer from 'components/Spacer';\nimport { KEYSIZE } from 'consts';\n\nconst SRow = styled.div`\n\tdisplay: flex;\n\theight: ${KEYSIZE}px;\n`;\n\nconst KeyboardRow = ({ keys }) => (\n\t<SRow>\n\t\t{keys.map((key, index) => {\n\t\t\tconst { code, rowHeight, size, type } = key;\n\t\t\t// eslint-disable-next-line react/no-array-index-key\n\t\t\tif (type === 'spacer') return <Spacer key={index} size={size} />;\n\t\t\treturn (\n\t\t\t\t<KeyByCode key={code} code={code} rowHeight={rowHeight} size={size} />\n\t\t\t);\n\t\t})}\n\t</SRow>\n);\n\nKeyboardRow.propTypes = {\n\tkeys: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tcode: PropTypes.string,\n\t\t\tlabel: PropTypes.string,\n\t\t\tsecondaryLabel: PropTypes.string,\n\t\t\tsize: PropTypes.number,\n\t\t}),\n\t).isRequired,\n};\n\nexport default KeyboardRow;\n","import KeyboardRow from './KeyboardRow';\n\nexport default KeyboardRow;\n","// https://keycode.info/ for codes\n\nimport { useContext } from 'react';\nimport styled from 'styled-components';\nimport KeyboardRow from 'components/KeyboardRow';\nimport ConfigContext from 'context/Config';\n\nconst SBoard = styled.div`\n\tpadding: 1em;\n\twidth: fit-content;\n\tbackground-color: ${({ theme }) => theme.lightest};\n\tborder-radius: 3px;\n`;\n\nconst Keyboard = () => {\n\tconst { keys } = useContext(ConfigContext);\n\n\treturn (\n\t\t<SBoard>\n\t\t\t{keys.map((row, index) => {\n\t\t\t\t// eslint-disable-next-line react/no-array-index-key\n\t\t\t\treturn <KeyboardRow key={index} keys={row} />;\n\t\t\t})}\n\t\t</SBoard>\n\t);\n};\n\nexport default Keyboard;\n","import Keyboard from './Keyboard';\n\nexport default Keyboard;\n","import { useState } from 'react';\nimport styled from 'styled-components';\nimport { lighten } from 'polished';\nimport ActiveKeysContext from 'context/ActiveKeys';\nimport Keyboard from 'components/Keyboard';\n\nconst SPageWrapper = styled.div`\n\tbackground-color: ${({ theme }) => lighten(0.1, theme.dark)};\n\n\tbackground: ${({ theme }) => theme.dark};\n\tbackground: ${({ theme }) =>\n\t\t`linear-gradient(45deg, ${theme.dark} 0%, ${lighten(\n\t\t\t0.1,\n\t\t\ttheme.dark,\n\t\t)} 50%, ${theme.dark} 100%);`}\n\twidth: 100%;\n\theight: 100vh;\n\tpadding: 1em;\n`;\n\nconst SLink = styled.a`\n\tcolor: ${({ theme }) => theme.text};\n`;\n\nconst Index = () => {\n\tconst [activeKeys, setActiveKeys] = useState([]);\n\n\tconst handleKeyDown = (event) => {\n\t\tevent.preventDefault();\n\t\tif (event.repeat) return;\n\t\tsetActiveKeys([event.code, ...activeKeys]);\n\t};\n\n\tconst handleKeyUp = (event) => {\n\t\tevent.preventDefault();\n\t\tsetActiveKeys(activeKeys.filter((key) => key !== event.code));\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<ActiveKeysContext.Provider value={activeKeys}>\n\t\t\t\t<SPageWrapper\n\t\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t\tonKeyUp={handleKeyUp}\n\t\t\t\t\ttabIndex={-1}\n\t\t\t\t>\n\t\t\t\t\t<Keyboard />\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{'Created by Cameron Bulock. Report issues on '}\n\t\t\t\t\t\t<SLink href=\"https://github.com/cbulock/keyboard-tester\">\n\t\t\t\t\t\t\tGithub\n\t\t\t\t\t\t</SLink>\n\t\t\t\t\t</p>\n\t\t\t\t</SPageWrapper>\n\t\t\t</ActiveKeysContext.Provider>\n\t\t</>\n\t);\n};\n\nexport default Index;\n","// If other pages are added, add a router here\nimport Index from 'pages/Index';\n\nconst App = () => <Index />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport ConfigContext from 'context/Config';\nimport GlobalStyle from 'components/GlobalStyle';\nimport config from 'config.json';\nimport theme from 'theme.json';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ConfigContext.Provider value={config}>\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<GlobalStyle />\n\t\t\t\t<App />\n\t\t\t</ThemeProvider>\n\t\t</ConfigContext.Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}