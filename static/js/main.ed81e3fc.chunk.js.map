{"version":3,"sources":["components/GlobalStyle.jsx","context/ConfigContext.js","context/ActiveKeys.js","components/Key/Icon.jsx","components/Key/Key.jsx","consts.js","components/Key/index.js","components/Spacer/Spacer.jsx","components/Spacer/index.js","components/KeyboardRow/KeyboardRow.jsx","components/KeyboardRow/index.js","components/Keyboard/Keyboard.jsx","components/Keyboard/index.js","pages/Index.jsx","App.jsx","index.jsx"],"names":["GlobalStyle","createGlobalStyle","ConfigContext","createContext","ActiveKeys","Icon","name","className","SKey","styled","div","position","handleXPosition","handleYPosition","size","KEYSIZE","hasBeenActive","props","active","determineBackgroundColor","SPrimary","SLabel","span","SSecondaryLabel","SIcon","Key","label","secondaryLabel","startIcon","endIcon","useState","setHasBeenActive","useEffect","SSpacer","Spacer","SRow","KeyboardRow","keys","style","useContext","activeKeys","ActiveKeysContext","map","key","code","type","includes","SBoard","Keyboard","rows","Array","from","Set","row","keysByRow","filter","sort","a","b","SPageWrapper","Index","setActiveKeys","Provider","value","onKeyDown","event","preventDefault","repeat","onKeyUp","tabIndex","App","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed81e3fc.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n    body {\n        margin: 0;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n        'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n  \n    code {\n        font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n    }\n`;\n\nexport default GlobalStyle;\n","import { createContext } from 'react';\n\nconst ConfigContext = createContext();\n\nexport default ConfigContext;\n","import { createContext } from 'react';\n\nconst ActiveKeys = createContext();\n\nexport default ActiveKeys;\n","/* eslint-disable import/no-extraneous-dependencies */\nimport PropTypes from 'prop-types';\nimport { Shift as ShiftIcon } from '@styled-icons/icomoon';\nimport { ArrowReturnLeft as EnterIcon } from '@styled-icons/bootstrap';\n\nconst Icon = ({ name = null, className }) => {\n\tswitch (name) {\n\t\tcase 'enter':\n\t\t\treturn <EnterIcon className={className} />;\n\t\tcase 'shift':\n\t\t\treturn <ShiftIcon className={className} />;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n\nIcon.propTypes = {\n\tname: PropTypes.string,\n\tclassName: PropTypes.string,\n};\n\nexport default Icon;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Icon from 'components/Key/Icon';\nimport { KEYSIZE } from 'consts';\n\nconst handleXPosition = (position) => {\n\tswitch (position) {\n\t\tcase 'top-left':\n\t\tcase 'bottom-left':\n\t\t\treturn 'flex-start';\n\t\tcase 'top-right':\n\t\tcase 'bottom-right':\n\t\t\treturn 'flex-end';\n\t\tdefault:\n\t\t\treturn 'center';\n\t}\n};\n\nconst handleYPosition = (position) => {\n\tswitch (position) {\n\t\tcase 'top-left':\n\t\tcase 'top-right':\n\t\t\treturn 'flex-start';\n\t\tcase 'bottom-left':\n\t\tcase 'bottom-right':\n\t\t\treturn 'flex-end';\n\t\tdefault:\n\t\t\treturn 'center';\n\t}\n};\n\nconst determineBackgroundColor = ({ active, hasBeenActive }) => {\n\tif (active) return '#06a972';\n\tif (hasBeenActive) return '#9dffde';\n\treturn '#dfdfdf';\n};\n\nconst SKey = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: ${({ position }) => handleXPosition(position)};\n\tjustify-content: ${({ position }) => handleYPosition(position)};\n\tmargin: 4px;\n\twidth: ${({ size }) => size * KEYSIZE - 10}px;\n\theight: ${KEYSIZE - 10}px;\n\tborder: 1px solid\n\t\t${({ hasBeenActive }) => (hasBeenActive ? '#06a972' : '#333')};\n\tborder-radius: 4px;\n\tbackground-color: ${(props) => determineBackgroundColor(props)};\n`;\n\nconst SPrimary = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n`;\n\nconst SLabel = styled.span`\n\tpadding: 4px;\n\tfont-weight: 700;\n\tfont-size: 1.25rem;\n`;\n\nconst SSecondaryLabel = styled.span`\n\tpadding: 6px;\n\tfont-size: 0.875rem;\n`;\n\nconst SIcon = styled(Icon)`\n\twidth: 20px;\n\tpadding: 0 4px;\n`;\n\nconst Key = ({\n\tlabel = '',\n\tsecondaryLabel = null,\n\tstartIcon = null,\n\tendIcon = null,\n\tsize = 1,\n\tposition = 'center',\n\tactive = false,\n}) => {\n\tconst [hasBeenActive, setHasBeenActive] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (active) setHasBeenActive(true);\n\t}, [active]);\n\n\treturn (\n\t\t<SKey\n\t\t\tsize={size}\n\t\t\tposition={position}\n\t\t\tactive={active}\n\t\t\thasBeenActive={hasBeenActive}\n\t\t>\n\t\t\t{!!secondaryLabel && <SSecondaryLabel>{secondaryLabel}</SSecondaryLabel>}\n\t\t\t<SPrimary>\n\t\t\t\t{startIcon && <SIcon name={startIcon} />}\n\t\t\t\t<SLabel>{label}</SLabel>\n\t\t\t\t{endIcon && <SIcon name={endIcon} />}\n\t\t\t</SPrimary>\n\t\t</SKey>\n\t);\n};\n\nconst validIconNames = [null, 'enter', 'shift'];\n\nKey.propTypes = {\n\tlabel: PropTypes.string,\n\tsecondaryLabel: PropTypes.string,\n\tsize: PropTypes.number,\n\tposition: PropTypes.oneOf([\n\t\t'top-left',\n\t\t'bottom-left',\n\t\t'top-right',\n\t\t'bottom-right',\n\t\t'center',\n\t]),\n\tstartIcon: PropTypes.oneOf(validIconNames),\n\tendIcon: PropTypes.oneOf(validIconNames),\n\tactive: PropTypes.bool,\n};\n\nexport default Key;\n","const KEYSIZE = 19 * 3 + 10;\n\n// eslint-disable-next-line import/prefer-default-export\nexport { KEYSIZE };\n","import Key from './Key';\n\nexport default Key;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { KEYSIZE } from 'consts';\n\nconst SSpacer = styled.div`\n\tmargin: 4px;\n\twidth: ${({ size }) => size * KEYSIZE - 10}px;\n\theight: ${KEYSIZE - 10}px;\n\tborder: 1px solid rgba(0, 0, 0, 0);\n`;\n\nconst Spacer = ({ size = 1 }) => <SSpacer size={size} />;\n\nSpacer.propTypes = {\n\tsize: PropTypes.number,\n};\n\nexport default Spacer;\n","import Spacer from './Spacer';\n\nexport default Spacer;\n","import { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Key from 'components/Key';\nimport Spacer from 'components/Spacer';\nimport ConfigContext from 'context/ConfigContext';\nimport ActiveKeysContext from 'context/ActiveKeys';\n\nconst SRow = styled.div`\n\tdisplay: flex;\n`;\n\nconst KeyboardRow = ({ keys }) => {\n\tconst { style } = useContext(ConfigContext);\n\tconst activeKeys = useContext(ActiveKeysContext);\n\n\treturn (\n\t\t<SRow>\n\t\t\t{keys.map((key) => {\n\t\t\t\tconst {\n\t\t\t\t\tcode,\n\t\t\t\t\tendIcon,\n\t\t\t\t\tlabel,\n\t\t\t\t\tsecondaryLabel,\n\t\t\t\t\tsize,\n\t\t\t\t\tstartIcon,\n\t\t\t\t\ttype,\n\t\t\t\t} = key;\n\t\t\t\tif (type === 'spacer') return <Spacer size={size} />;\n\t\t\t\treturn (\n\t\t\t\t\t<Key\n\t\t\t\t\t\tkey={code}\n\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\tsecondaryLabel={secondaryLabel}\n\t\t\t\t\t\tstartIcon={startIcon}\n\t\t\t\t\t\tendIcon={endIcon}\n\t\t\t\t\t\tsize={size}\n\t\t\t\t\t\tposition={style.position}\n\t\t\t\t\t\tactive={activeKeys.includes(code)}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</SRow>\n\t);\n};\n\nKeyboardRow.propTypes = {\n\tkeys: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tcode: PropTypes.string,\n\t\t\tlabel: PropTypes.string,\n\t\t\tsecondaryLabel: PropTypes.string,\n\t\t\tsize: PropTypes.number,\n\t\t}),\n\t).isRequired,\n\tstyle: PropTypes.shape({\n\t\tposition: PropTypes.oneOf([\n\t\t\t'top-left',\n\t\t\t'bottom-left',\n\t\t\t'top-right',\n\t\t\t'bottom-right',\n\t\t\t'center',\n\t\t]),\n\t}),\n};\n\nexport default KeyboardRow;\n","import KeyboardRow from './KeyboardRow';\n\nexport default KeyboardRow;\n","// https://keycode.info/ for codes\n\nimport { useContext } from 'react';\nimport styled from 'styled-components';\nimport KeyboardRow from 'components/KeyboardRow';\nimport ConfigContext from 'context/ConfigContext';\n\nconst SBoard = styled.div`\n\tpadding: 1em;\n\twidth: fit-content;\n\tbackground-color: #eee;\n\tborder-radius: 3px;\n`;\n\nconst Keyboard = () => {\n\tconst { keys } = useContext(ConfigContext);\n\n\tconst rows = Array.from(new Set(keys.map((key) => key.row)));\n\treturn (\n\t\t<SBoard>\n\t\t\t{rows.map((row) => {\n\t\t\t\tconst keysByRow = keys\n\t\t\t\t\t.filter((key) => key.row === row)\n\t\t\t\t\t.sort((a, b) => a.position - b.position);\n\t\t\t\treturn <KeyboardRow key={row} keys={keysByRow} />;\n\t\t\t})}\n\t\t</SBoard>\n\t);\n};\n\nexport default Keyboard;\n","import Keyboard from './Keyboard';\n\nexport default Keyboard;\n","import { useState } from 'react';\nimport styled from 'styled-components';\nimport ActiveKeysContext from 'context/ActiveKeys';\nimport Keyboard from 'components/Keyboard';\n\nconst SPageWrapper = styled.div`\n\twidth: 100%;\n\theight: 100vh;\n\tpadding: 1em;\n`;\n\nconst Index = () => {\n\tconst [activeKeys, setActiveKeys] = useState([]);\n\n\tconst handleKeyDown = (event) => {\n\t\tevent.preventDefault();\n\t\tif (event.repeat) return;\n\t\tsetActiveKeys([event.code, ...activeKeys]);\n\t};\n\n\tconst handleKeyUp = (event) => {\n\t\tevent.preventDefault();\n\t\tsetActiveKeys(activeKeys.filter((key) => key !== event.code));\n\t};\n\n\treturn (\n\t\t<ActiveKeysContext.Provider value={activeKeys}>\n\t\t\t<SPageWrapper\n\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\tonKeyUp={handleKeyUp}\n\t\t\t\ttabIndex={-1}\n\t\t\t>\n\t\t\t\t<Keyboard />\n\t\t\t</SPageWrapper>\n\t\t</ActiveKeysContext.Provider>\n\t);\n};\n\nexport default Index;\n","import ConfigContext from 'context/ConfigContext';\nimport Index from 'pages/Index';\nimport config from 'config.json';\n\nconst App = () => (\n\t<ConfigContext.Provider value={config}>\n\t\t<Index />\n\t</ConfigContext.Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GlobalStyle from 'components/GlobalStyle';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<GlobalStyle />\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}